{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Selectarr Smart Collections in Jellyfin - Select media with SQL-like queries. Designed to replicate the smart playlists feature of Plex . With Selectarr, create collections like '90s Simpsons' or 'Toy Story' without needing to add every TV series, episode, or movie one-by-one. Create dynamic collections such as 'Unplayed Movies'. This is what Selectarr creates in Jellyfin:","title":"About"},{"location":"#selectarr","text":"Smart Collections in Jellyfin - Select media with SQL-like queries. Designed to replicate the smart playlists feature of Plex . With Selectarr, create collections like '90s Simpsons' or 'Toy Story' without needing to add every TV series, episode, or movie one-by-one. Create dynamic collections such as 'Unplayed Movies'. This is what Selectarr creates in Jellyfin:","title":"Selectarr"},{"location":"build/","text":"Building Building From Source Create a Python virtual environment, activate it, update pip, and install requirements: python3 -m venv venv source venv/bin/activate pip install --upgrade pip pip install -r requirements.txt Set the environment variable and run Selectarr: export JELLYFIN_API_KEY = your_api_key_here python run.py --help Alternative Build: Container Image Build the image: docker build -t selectarr . Run the container: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml selectarr Append options like --debug or --dry-run: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml selectarr --help","title":"Building"},{"location":"build/#building","text":"","title":"Building"},{"location":"build/#building-from-source","text":"Create a Python virtual environment, activate it, update pip, and install requirements: python3 -m venv venv source venv/bin/activate pip install --upgrade pip pip install -r requirements.txt Set the environment variable and run Selectarr: export JELLYFIN_API_KEY = your_api_key_here python run.py --help","title":"Building From Source"},{"location":"build/#alternative-build-container-image","text":"Build the image: docker build -t selectarr . Run the container: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml selectarr Append options like --debug or --dry-run: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml selectarr --help","title":"Alternative Build: Container Image"},{"location":"setup/","text":"Setup Get an API key from Jellyfin: Settings --> Dashboard --> API Keys Create a config.yml file with your Jellyfin server details and collection definitions Run Selectarr! Either use the provided container image, build your own, or just launch run.py. Configuration Selectarr uses a configuration file, written in YAML. Here is a minimal example: --- jellyfin_server : url : http://jellyfin.yourdomain user : yourusername collections : TV Shows - Unplayed : query : WHERE Played = false from : TV Shows Supported Query Conditions Played = false (boolean) - filters based on whether media has been watched SeriesName LIKE \"The Office\" (string) - matches TV Show/Series name containing the specified text ProductionYear > 1940 (integer) - filters by production year (supports >, <, =, >=, <=) Boolean Logic AND - combine multiple conditions Examples WHERE Played = false AND SeriesName LIKE \"Taskmaster\" WHERE SeriesName LIKE \"Simpsons\" AND ProductionYear > 1989 AND ProductionYear < 2000 Look at config_example.yml for a full example. Using the Container Image Selectarr is available as a container image. Create your config.yml and API key then run it with: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml jeffwhite530/selectarr:latest Append options like --debug or --dry-run: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml jeffwhite530/selectarr:latest --help","title":"Setup"},{"location":"setup/#setup","text":"Get an API key from Jellyfin: Settings --> Dashboard --> API Keys Create a config.yml file with your Jellyfin server details and collection definitions Run Selectarr! Either use the provided container image, build your own, or just launch run.py.","title":"Setup"},{"location":"setup/#configuration","text":"Selectarr uses a configuration file, written in YAML. Here is a minimal example: --- jellyfin_server : url : http://jellyfin.yourdomain user : yourusername collections : TV Shows - Unplayed : query : WHERE Played = false from : TV Shows","title":"Configuration"},{"location":"setup/#supported-query-conditions","text":"Played = false (boolean) - filters based on whether media has been watched SeriesName LIKE \"The Office\" (string) - matches TV Show/Series name containing the specified text ProductionYear > 1940 (integer) - filters by production year (supports >, <, =, >=, <=)","title":"Supported Query Conditions"},{"location":"setup/#boolean-logic","text":"AND - combine multiple conditions","title":"Boolean Logic"},{"location":"setup/#examples","text":"WHERE Played = false AND SeriesName LIKE \"Taskmaster\" WHERE SeriesName LIKE \"Simpsons\" AND ProductionYear > 1989 AND ProductionYear < 2000 Look at config_example.yml for a full example.","title":"Examples"},{"location":"setup/#using-the-container-image","text":"Selectarr is available as a container image. Create your config.yml and API key then run it with: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml jeffwhite530/selectarr:latest Append options like --debug or --dry-run: docker run -e JELLYFIN_API_KEY = your_api_key_here -v $( pwd ) /config.yml:/app/config.yml jeffwhite530/selectarr:latest --help","title":"Using the Container Image"}]}